props_id: bullet
props:
#    {
 #        key: 'data',
 #        scopes: '*',
 #        description: (
 #            <div>
 #                Chart data, which must conform to this structure:
 #                <pre className="code code-block">
 #                    {dedent`
 #                        Array<{
 #                            id:        {string|number}
 #                            title?:    {ReactNode}
 #                            subtitle?: {ReactNode}
 #                            data: Array<{
 #                                ranges:   number[]
 #                                measures: number[]
 #                                markers?: number[]
 #                            }>
 #                        }>
 #                    `}
 #                </pre>
 #                If <code>title</code> is <code>undefined</code>, <code>id</code> will be used for{' '}
 #                <code>title</code>.
 #            </div>
 #        ),
 #        type: '{Array.<object>}',
 #        required: true,
 #    },
 #    {
 #        key: 'width',
 #        scopes: ['api'],
 #        docScopes: '*',
 #        description: (
 #            <span>
 #                not required if using <code>ResponsiveBullet</code>.
 #            </span>
 #        ),
 #        help: 'Chart width.',
 #        type: '{number}',
 #        required: true,
 #        control: 'range',
 #        group: 'Base',
 #        controlOptions: {
 #            unit: 'px',
 #            min: 100,
 #            max: 1000,
 #            step: 5,
 #        },
 #    },
 #    {
 #        key: 'height',
 #        scopes: ['api'],
 #        docScopes: '*',
 #        description: (
 #            <span>
 #                not required if using <code>ResponsiveBullet</code>.
 #            </span>
 #        ),
 #        help: 'Chart height.',
 #        type: '{number}',
 #        required: true,
 #        control: 'range',
 #        group: 'Base',
 #        controlOptions: {
 #            unit: 'px',
 #            min: 100,
 #            max: 1000,
 #            step: 5,
 #        },
 #    },
  - key: layout
    description: |
      How to display items, must be one of: 'horizontal', 'vertical'.
    type: '{string}'
    required: false
    default: defaults.layout
    control: radio
    group: Base
    controlOptions:
      choices:
        - label: horizontal
          value: horizontal
          icon: bar-horizontal
        - label: vertical
          value: vertical
          icon: bar-vertical

  - key: reverse
    description: |
      Reverse chart, starts on top instead of bottom for vertical layout
      and right instead of left for horizontal one.
    type: '{boolean}'
    required: false
    default: defaults.reverse
    control: switch
    group: Base

  - key: spacing
    description: |
      Define spacing between items (px).
    required: false
    default: defaults.spacing
    control: range
    group: Base
    controlOptions:
      unit: px
      min: 0
      max: 100

  - key: measureSize
    description: |
      Define size of measure related to item size, expressed as a ratio.
    type: '{number}'
    required: false
    default: defaults.measureSize
    control: range
    group: Base
    controlOptions:
      min: 0
      max: 1
      step: 0.05

  - key: markerSize
    description: |
      define size of markers related to item size, expressed as a ratio.
    type: '{number}'
    required: false
    default: defaults.markerSize
    control: range
    group: Base
    controlOptions:
      min: 0
      max: 2
      step: 0.05

  - key: margin
    description: |
      Control chart's margins
    type: '{object}'
    control: margin
    group: Base

 #        key: 'rangeComponent',
 #        scopes: ['Bullet'],
 #        description: 'Custom component for ranges.',
 #        type: '{Function}',
 #        required: false,

  - key: rangeColors
    description: |
      Defines colors for ranges, you can either use categorical colors:
      `greens` or sequential form: `seq:green`.
    type: '{string|Function|Array}'
    required: false
    default: defaults.rangeColors
    control: colors
    group: Style
    controlOptions:
      includeSequential: true

 #        key: 'measureComponent',
 #        scopes: ['Bullet'],
 #        description: 'Custom component for measures.',
 #        type: '{Function}',
 #        required: false,

  - key: measureColors
    description: |
      Defines colors for measures, you can either use categorical colors:
      `greens` or sequential form: `seq:green`.
    type: '{string|Function|Array}'
    required: false
    default: defaults.measureColors
    control: colors
    group: Style
    controlOptions:
      includeSequential: true

  - key: markerComponent
    scopes:
      - Bullet
    description: |
      Custom component for markers.
    type: '{Function}'
    required: false

  - key: markerColors
    description: |
      Defines colors for markers, you can either use categorical colors:
      `greens` or sequential form: `seq:green`.
    type: '{string|Function|Array}'
    required: false
    default: defaults.markerColors
    control: colors
    group: Style
    controlOptions:
      includeSequential: true

  - key: axisPosition
    description: |
      Where to put axis, must be one of: 'before', 'after'.
    type: "{'before'|'after'}"
    required: false
    default: defaults.axisPosition
    control: radio
    group: Axes
    controlOptions:
      choices:
        - label: before
          value: before
        - label: after
          value: after

  - key: titlePosition
    description: |
      Where to put title, must be one of: 'before', 'after'.
    type: "{'before'|'after'}"
    required: false
    default: defaults.titlePosition
    control: radio
    group: Title
    controlOptions:
      choices:
        - label: before
          value: before
        - label: after
          value: after

  - key: titleAlign
    description: |
      Title alignment, must be one of: 'start', 'middle', 'end'.
    type: "{'start'|'middle'|'end'}"
    required: false
    default: defaults.titleAlign
    control: choices
    group: Title
    controlOptions:
      choices:
        - label: start
          value: start
        - label: middle
          value: middle
        - label: end
          value: end

  - key: titleOffsetX
    description: |
      title x offset (px) from bullet edge.
    type: '{number}'
    required: false
    default: defaults.titleOffset
    control: range
    group: Title
    controlOptions:
      min: -100
      max: 100
      unit: px

  - key: titleOffsetY
    description: |
      title y offset (px) from bullet edge.
    type: '{number}'
    required: false
    default: defaults.titleOffset
    control: range
    group: Title
    controlOptions:
      min: -100
      max: 100
      unit: px

  - key: titleRotation
    description: |
      title rotation (deg.).
    type: '{number}'
    required: false
    default: defaults.titleRotation
    control: range
    group: Title
    controlOptions:
      min: -360
      max: 360
      step: 5
      unit: Â°

  - key: onRangeClick
    scopes:
      - Bullet
    type: '{Function}'
    required: false
    description: |
      onClick handler for ranges, will receive range data as first argument
      & event as second one. The data has the following shape:
      ```
      {
          id:    {string},
          v0:    {number},
          v1:    {number},
          index: {number},
          color: {string},
      }
      ```
      `v1` is the value of the range while `v0` is the value of previous range.

 #        key: 'onMeasureClick',
 #        scopes: ['Bullet'],
 #        type: '{Function}',
 #        required: false,
 #        description: (
 #            <div>
 #                onClick handler for measures, will receive measure data as first argument & event as
 #                second one. The data has the following shape:
 #                <pre className="code code-block">
 #                    {dedent`{
 #                        id:    {string},
 #                        v0:    {number},
 #                        v1:    {number},
 #                        index: {number},
 #                        color: {string},
 #                    }`}
 #                </pre>
 #                <code>v1</code> is the value of the measure while <code>v0</code> is the value of
 #                previous measure.
 #            </div>
 #        ),
 #    },
 #    ...motionProperties(['Bullet'], defaults),
 #]