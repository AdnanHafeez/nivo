props_id: parallel-coordinates
props:
#    {
 #        key: 'data',
 #        scopes: '*',
 #        description: 'Chart data.',
 #        type: '{Array<{object|Array}>}',
 #        required: true,
 #    },
 #    {
 #        key: 'variables',
 #        scopes: '*',
 #        type: '{Array<object>}',
 #        description: (
 #            <div>
 #                Variables configuration, define accessor (<code>key</code>) and variable type. Type
 #                must be one of <code>linear</code> or <code>point</code>, <code>linear</code>{' '}
 #                variables are suitable for continuous numerical data such as age or cost while{' '}
 #                <code>point</code> variables are suitable for discrete values such as gender.
 #            </div>
 #        ),
 #        controlGroup: 'Variables',
 #        controlType: 'array',
 #        controlOptions: {
 #            shouldCreate: false,
 #            shouldRemove: false,
 #            getItemTitle: (index, values) => `${values.key} (${values.type})`,
 #            props: [
 #                {
 #                    key: 'key',
 #                    description: 'Variable key, used to access to corresponding datum value.',
 #                    controlType: 'text',
 #                    controlOptions: {
 #                        disabled: true,
 #                    },
 #                },
 #                {
 #                    key: 'type',
 #                    description: `Variable type, must be one of: 'linear', 'point'.`,
 #                    controlType: 'text',
 #                    controlOptions: {
 #                        disabled: true,
 #                    },
 #                },
 #                {
 #                    key: 'min',
 #                    description: 'Min value of linear scale.',
 #                    type: `{number|'auto'}`,
 #                    controlType: 'switchableRange',
 #                    controlOptions: {
 #                        when: ({ type }) => type === 'linear',
 #                        disabledValue: 'auto',
 #                        defaultValue: 0,
 #                        min: -100,
 #                        max: 100,
 #                    },
 #                },
 #                {
 #                    key: 'max',
 #                    description: 'Max value of linear scale.',
 #                    type: `{number|'auto'}`,
 #                    controlType: 'switchableRange',
 #                    controlOptions: {
 #                        when: ({ type }) => type === 'linear',
 #                        disabledValue: 'auto',
 #                        defaultValue: 1000,
 #                        min: -100,
 #                        max: 100,
 #                    },
 #                },
 #                {
 #                    key: 'padding',
 #                    description: 'Outer padding (0~1).',
 #                    type: `{number}`,
 #                    controlType: 'range',
 #                    controlOptions: {
 #                        when: ({ type }) => type === 'point',
 #                        min: 0,
 #                        max: 1,
 #                        step: 0.01,
 #                    },
 #                },
 #            ],
 #        },
 #    },
 #    {
 #        key: 'width',
 #        scopes: ['api'],
 #        docScopes: '*',
 #        description: (
 #            <span>
 #                not required if using <code>ResponsiveParallelCoords</code>.
 #            </span>
 #        ),
 #        help: 'Chart width.',
 #        type: '{number}',
 #        required: true,
 #        controlType: 'range',
 #        controlGroup: 'Base',
 #        controlOptions: {
 #            unit: 'px',
 #            min: 100,
 #            max: 1000,
 #            step: 5,
 #        },
 #    },
 #    {
 #        key: 'height',
 #        scopes: ['api'],
 #        docScopes: '*',
 #        description: (
 #            <span>
 #                not required if using <code>ResponsiveParallelCoords</code>.
 #            </span>
 #        ),
 #        help: 'Chart height.',
 #        type: '{number}',
 #        required: true,
 #        controlType: 'range',
 #        controlGroup: 'Base',
 #        controlOptions: {
 #            unit: 'px',
 #            min: 100,
 #            max: 1000,
 #            step: 5,
 #        },
 #    },
 #    {
 #        key: 'pixelRatio',
 #        scopes: ['ParallelCoordinatesCanvas'],
 #        description: `Adjust pixel ratio, useful for HiDPI screens.`,
 #        required: false,
 #        default: 'Depends on device',
 #        type: `{number}`,
 #        controlType: 'range',
 #        controlGroup: 'Base',
 #        controlOptions: {
 #            min: 1,
 #            max: 2,

  - key: layout
    description: |
      Chart layout, must be one of: 'horizontal', 'vertical'.
    type: '{string}'
    required: false
    default: defaults.layout
    control: radio
    group: Base
    controlOptions:
      choices:
        - label: horizontal
          value: horizontal
        - label: vertical
          value: vertical

  - key: curve
    description: |
      Defines the curve factory to use for the line generator.
      Must be one of: {curveOptions}.
    help: |
      Curve interpolation.
    type: '{string}'
    required: false
    default: defaults.curve
    control: choices
    group: Base
    controlOptions:
      choices: []
 #            choices: lineCurvePropKeys.map(key => ({
 #                label: key,
 #                value: key,

 #        key: 'axesPlan',
 #        scopes: '*',
 #        description: `Axes plan, must be one of: 'foreground', 'background'.`,
 #        type: `{'foreground'|'background'}`,
 #        required: false,
 #        default: defaults.axesPlan,
 #        controlType: 'radio',
 #        controlGroup: 'Base',
 #        controlOptions: {
 #            choices: [
 #                { label: 'foreground', value: 'foreground' },
 #                { label: 'background', value: 'background' },
 #            ],

  - key: axesTicksPosition
    description: |
      Axes ticks position, must be one of: 'before', 'after'.
    type: "{'before'|'after'}"
    required: false
    default: defaults.axesTicksPosition
    control: radio
    group: Base
    controlOptions:
      choices:
        - label: before
          value: before
        - label: after
          value: after

  - key: colors
    description: |
      Defines color range.
    type: '{string|Function|Array}'
    required: false
    default: defaults.colors
    control: colors
    group: Style

 #        key: 'colorBy',
 #        scopes: '*',
 #        description:
 #            'Property used to determine line color. If a function is provided, it will receive current line data and must return a valid color.',
 #        required: false,
 #        default: defaults.colorBy,
 #        controlType: 'choices',
 #        controlGroup: 'Style',
 #        controlOptions: {
 #            choices: [
 #                {
 #                    label: 'index',
 #                    value: 'index',
 #                },
 #                {
 #                    label: 'target',
 #                    value: 'target',
 #                },
 #                {
 #                    label: `custom using 'color' variable`,
 #                    value: `custom using 'color' variable`,
 #                },
 #            ],
 #        },
 #    },
 #    {
 #        key: 'strokeWidth',
 #        scopes: '*',
 #        description: 'Lines stroke width (px).',
 #        type: '{number}',
 #        required: false,
 #        default: defaults.strokeWidth,
 #        controlType: 'range',
 #        controlGroup: 'Style',
 #        controlOptions: {
 #            unit: 'px',
 #            min: 1,
 #            max: 12,
 #        },
 #    },
 #    {
 #        key: 'lineOpacity',
 #        scopes: '*',
 #        description: 'Lines opacity.',
 #        type: '{number}',
 #        required: false,
 #        default: defaults.lineOpacity,
 #        controlType: 'range',
 #        controlGroup: 'Style',
 #        controlOptions: {
 #            min: 0,
 #            max: 1,
 #            step: 0.05,
 #        },
 #    },
 #    ...marginProperties,
 #    ...motionProperties(['ParallelCoordinates'], defaults),
